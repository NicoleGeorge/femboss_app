{"version":3,"sources":["components/layout/spinner.gif","actions/alert.js","actions/types.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/layout/VirtualCoworking.js","components/layout/Resources.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/layout/Spinner.js","components/dashboard/DashboardActions.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","utils/api.js","actions/profile.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/routing/PrivateRoute.js","App.js","index.js"],"names":["module","exports","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","className","to","class","onClick","guestLinks","src","alt","VirtualCoworking","Resources","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","vale","login","alerts","alert","length","map","key","spinner","style","width","margin","display","DashboardActions","initialState","getItem","user","profile","profiles","repos","posts","combineReducers","action","filter","setItem","removeItem","_id","likes","comments","comment","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","api","create","baseURL","interceptors","use","err","Promise","reject","getCurrentProfile","statusText","status","createProfile","history","edit","push","deleteExperience","delete","experience","experiences","exp","company","title","format","from","deleteEducation","education","educations","edu","school","degree","deleteAccount","window","confirm","useEffect","Spinner","trim","split","withRouter","website","location","bio","githubusername","skills","instagram","linkedin","youtube","twitter","facebook","displaySocialInputs","toggleSocialInputs","join","socials","addExperience","put","currrent","description","toDateDisabled","toggleDisabled","current","required","checked","disabled","cols","rows","addEducation","fieldofstudy","ProfileItem","avatar","slice","skill","index","getProfiles","message","ProfileTop","href","rel","ProfileAbout","ProfileExperience","moment","utc","ProfileEducation","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","user_id","match","params","PostItem","addLike","removeLike","deletePost","text","date","showActions","defaultProps","addPost","setText","getPosts","addComment","postId","deleteComment","commentId","getPost","Component","component","rest","render","props","App","exact","path","Landing","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1cf24bde.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.f81d9958.gif\";","import { SET_ALERT, REMOVE_ALERT } from './types';\nimport { v4 as uuidv4 } from 'uuid';\n// incorporating the 'thunk' middleware\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\n  const id = uuidv4();\n  dispatch({\n    type: SET_ALERT,\n    payload: { msg, alertType, id },\n  });\n\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n};\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const GET_REPOS = 'GET_REPOS';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const POST_ERROR = 'POST_ERROR';\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\nexport const DELETE_POST = 'DELETE_POST';\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\n","import axios from 'axios';\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common['x-auth-token'] = token;\n  } else {\n    delete axios.defaults.headers.common['x-auth-token'];\n  }\n};\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n//  Load a user\n\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get('/api/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register a user user\n\nexport const register = ({ name, email, password }) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n// Login User\n\nexport const login = (email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  const body = JSON.stringify({ email, password });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n// Logout user => clear token out of local storage\n\nexport const logout = () => (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { PropTypes } from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nexport const Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLinks = (\n    <ul>\n      <li>\n        <Link className='btn btn-nav btn-nav-member' to='/profiles'>\n          <i class='fas fa-code-branch'></i>\n          <span className='hide-sm'> Members</span>\n        </Link>\n      </li>\n      <li>\n        <Link className='btn btn-nav btn-nav-member' to='/posts'>\n          <i className='fas fa-comments'></i>{' '}\n          <span className='hide-sm'> Forum</span>\n        </Link>\n      </li>\n      <li>\n        <Link className='btn btn-nav btn-nav-member' to='/virtual-coworking'>\n          <i className='fas fa-video'></i>{' '}\n          <span className='hide-sm'> Virtual CoWorking</span>\n        </Link>\n      </li>\n      <li>\n        <Link className='btn btn-nav btn-nav-member' to='/resources'>\n          <i class='fas fa-link'></i>\n          <span className='hide-sm'> Resources</span>\n        </Link>\n      </li>\n      <li>\n        <Link className='btn btn-nav btn-nav-member' to='/dashboard'>\n          <i className='fas fa-user-astronaut'></i>\n          {''}\n          <span className='hide-sm'> Dashboard</span>\n        </Link>\n      </li>\n      <li>\n        <a onClick={logout} className='btn btn-nav btn-nav-member' to='#!'>\n          <i className='fas fa-sign-out-alt'></i>\n          {''}\n          <span className='hide-sm'>Logout</span>\n        </a>\n      </li>\n    </ul>\n  );\n\n  const guestLinks = (\n    <ul>\n      {/* made viewing Members only accissible to logged in users */}\n      {/* <li>\n        <Link className='btn btn-nav btn-nav-member' to='/profiles'>\n          Members\n        </Link>\n      </li> */}\n      <li>\n        <Link className='btn-auth btn-nav' to='/join'>\n          Join\n        </Link>\n      </li>\n      <li>\n        <Link className='btn-auth btn-nav' to='/login'>\n          Log in\n        </Link>\n      </li>\n    </ul>\n  );\n\n  return (\n    <nav className='navbar nav-primary'>\n      <h1 className='navbar-logo'>\n        <Link to='/'>\n          <i className='fab fa-angellist'></i> femBOSS\n        </Link>\n      </h1>\n      {/* { !loading ? '' : null} */}\n      {!loading && (\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n      )}\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nexport const Landing = ({ isAuthenticated }) => {\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <section className='landing'>\n      <img src='../../img/icon.png' alt='' />\n      <div className='landing-overlay'>\n        <div className='landing-inner'>\n          <h1 className='x-large'>femBOSS</h1>\n          <h1 className='medium'>\n            The Professional Network for \n            Women in Tech\n          </h1>\n          <p className='lead-profile-top'>\n            <string> ...ambition begins here.</string>\n          </p>\n          <div className='buttons'>\n            <Link to='/join' className='btn-auth btn-primary'>\n              Join\n            </Link>\n            <Link to='/login' className='btn-auth btn-primary'>\n              Log in\n            </Link>\n          </div>\n        </div>\n        {/* <div className='landing-two'> */}\n\n        {/* <h1>hello!!</h1>\n        </div> */}\n      </div>\n    </section>\n  );\n};\n\nLanding.propTypes = {\n  isAuthenticated: PropTypes.bool,\n};\n\nconst maoStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(maoStateToProps)(Landing);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const VirtualCoworking = () => {\n  return (\n    <section className='container-service'>\n      <div className='services-inner'>\n        <h1 className='x-large'><i className='fas fa-video'></i>{' '}Virtual <br/>CoWorking</h1>\n        <h1>Ready to plan a coding session?</h1>\n        <p className='lead'>\n          At femBOSS we are all about collaborative learning. Whether you’re\n          just starting to code, launching a business, figuring out the\n          freelancer life, or cultivating the tech career of your dreams, work\n          alongside femBOSS community members and reach your full potential.\n        </p>\n        <div className='buttons'>\n          <Link to='/dashboard' className='btn btn-primary'>\n            Schedule a Session\n          </Link>\n          <Link to='/profiles' className='btn btn-primary'>\n            Find a Mentor\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default VirtualCoworking;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const Resources = () => {\n  return (\n    <section className='container-resource'>\n      <div className='services-inner'>\n        <h1 className='x-large'><i class='fas fa-link'></i>{' '}Resources</h1>\n        <h1>We're here to help you!</h1>\n        <p className='lead'>\n          <br />\n          Our curated bundles have the tools, resources, worksheets, and\n          checklists to help you build a successful career in tech.{' '}\n        </p>\n        <div className='buttons'>\n          <Link to='/dashboard' className='btn btn-primary'>\n            Browse Bundles\n          </Link>\n          <Link to='/profiles' className='btn btn-primary'>\n            Find a Mentor\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Resources;\n","import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\n// import axios from 'axios';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  // destructure the state\n\n  const { name, email, password, password2 } = formData;\n\n  //   update the name, use the spread operator to copy formData, change name to the value of the input\n  const onChange = (e) =>\n    //   [e.target.name] => using this as a key, so I can use the onChange for every inpout field\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  // function so the submit form doesn't refresh\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    // validating paswords => making sure they both match\n\n    if (password !== password2) {\n      setAlert('passwords do not match', 'danger');\n    } else {\n      register({ name, email, password });\n      // can successfully access the backend database!!\n\n      //   const newUser = {\n      //     name,\n      //     email,\n      //     password,\n      //   };\n      //   try {\n      //     const config = {\n      //       headers: {\n      //         'Content-type': 'application/json'\n      //       }\n      //     }\n      //     const body = JSON.stringify(newUser);\n      //     const res = await axios.post('/api/users', body, config);\n      //     console.log(res.data);\n      //   } catch (error) {\n      //     console.error(error.response.data);\n      //   }\n    } // }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <Fragment>\n      <div className='join-hero'>\n        <h1 className='large text-primary '>Join</h1>\n        <p className='lead'>\n          <i className='fas fa-magic'></i> Create Your Account\n        </p>\n        <form className='form' onSubmit={(e) => onSubmit(e)}>\n          <div className='form-group'>\n            <input\n              type='text'\n              placeholder='Name'\n              name='name'\n              vale={name}\n              onChange={(e) => onChange(e)}\n              //   required\n            />\n          </div>\n          <div className='form-group'>\n            <input\n              type='email'\n              placeholder='Email Address'\n              name='email'\n              vale={email}\n              onChange={(e) => onChange(e)}\n              //   required\n            />\n            <small className='form-text'>\n              For a profile image, use a Gravatar email.\n            </small>\n          </div>\n          <div className='form-group'>\n            <input\n              type='password'\n              placeholder='Password'\n              name='password'\n              vale={password}\n              onChange={(e) => onChange(e)}\n              //   minLength='6'\n            />\n          </div>\n          <div className='form-group'>\n            <input\n              type='password'\n              placeholder='Confirm Password'\n              name='password2'\n              value={password2}\n              onChange={(e) => onChange(e)}\n              //   minLength='6'\n            />\n          </div>\n          <input type='submit' className='btn-auth btn-primary' value='Join' />\n        </form>\n        <p className='my-1'>\n          Already a femBOS member? <Link to='/login'>login</Link>\n        </p>\n      </div>\n      {/* <div>\n        <h1>hi!!</h1>\n      </div> */}\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  // destructure the state\n\n  const { email, password } = formData;\n\n  //   update the name, use the spread operator to copy formData, change name to the value of the input\n  const onChange = (e) =>\n    //   [e.target.name] => using this as a key, so I can use the onChange for every inpout field\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  // function so the submit form doesn't refresh\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    login(email, password);\n    // console.log('successfully logged in');\n  };\n  // redirecting the user once they're logged in\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n  return (\n    <Fragment>\n      <section className='join-hero'>\n        <h1 className='large text-primary '>Login</h1>\n        <p className='lead'>\n          <i className='fas fa-hand-sparkles'></i> Hi, welcome back!\n        </p>\n        <form className='form' onSubmit={(e) => onSubmit(e)}>\n          <div className='form-group'>\n            <input\n              type='email'\n              placeholder='Email Address'\n              name='email'\n              vale={email}\n              onChange={(e) => onChange(e)}\n              // required\n            />\n          </div>\n          <div className='form-group'>\n            <input\n              type='password'\n              placeholder='Password'\n              name='password'\n              vale={password}\n              onChange={(e) => onChange(e)}\n              // minLength='6'\n            />\n          </div>\n          <input type='submit' className='btn-auth btn-primary' value='Login' />\n        </form>\n        <p className='my-1'>\n          Not a femBOSS member? <Link to='/join'>Join us!</Link>\n        </p>\n      </section>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n  alerts !== null &&\n  alerts.length > 0 &&\n  alerts.map((alert) => (\n    <div key='{alert.id' className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alert,\n});\nexport default connect(mapStateToProps)(Alert);\n","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nexport default () => (\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading...'\n    />\n  </Fragment>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const DashboardActions = () => {\n  return (\n    <div class='dash-buttons'>\n      <Link to='/edit-profile' class='btn btn-primary'>\n        <i class='fas fa-hat-wizard text-primary icon-dashboard'></i> Edit Profile\n      </Link>\n      <Link to='/add-experience' class='btn btn-primary'>\n        <i class='fas fa-laptop-code text-primary icon-dashboard'></i> Add Experience\n      </Link>\n      <Link to='/add-education' class='btn btn-primary'>\n        <i class='fas fa-user-graduate text-primary icon-dashboard'></i> Add Education\n      </Link>\n    </div>\n  );\n};\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  // destructuring\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED,\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n} from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n        profile: null,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        // loading: false,\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_POSTS,\n  GET_POST,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  ADD_COMMENT,\n  DELETE_COMMENT,\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false,\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false,\n      };\n    case DELETE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            //delete comment from the state & ui ==> since it's been delted serverside\n            (comment) => comment._id !== payload\n          ),\n        },\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport post from './post';\n\nexport default combineReducers({\n  alert,\n  auth,\n  profile,\n  post,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initalState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initalState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\nexport default store;\n","import axios from 'axios';\nimport store from '../store';\nimport { LOGOUT } from '../actions/types';\n\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n/**\n intercept any error responses from the api\n and check if the token is no longer valid.\n ie. Token has expired\n logout the user if the token has expired\n**/\n\napi.interceptors.response.use(\n  res => res,\n  err => {\n    if (err.response.data.msg === 'Token is not valid') {\n      store.dispatch({ type: LOGOUT });\n    }\n    return Promise.reject(err);\n  }\n);\n\nexport default api;","import axios from 'axios';\nimport api from '../utils/api';\nimport { setAlert } from './alert';\n\nimport {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  ACCOUNT_DELETED,\n  CLEAR_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n} from './types';\n\n// get all data from a user PROFILE\n\nexport const getCurrentProfile = () => async (dispatch) => {\n  // making the request to the backend\n  try {\n    const res = await axios.get('/api/profile/me');\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// get all user profiles ===> membership page grid\n\nexport const getProfiles = () => async (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n\n  try {\n    const res = await axios.get('/api/profile');\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response ? err.response.statusText : err.message , status: err.status || 0},\n    });\n  }\n};\n\n\n// get all user profiles by :id ===> profile page of another user will load\n\nexport const getProfileById = (user_id) => async (dispatch) => {\n  // making the request to the backend\n  try {\n    const res = await axios.get(`/api/profile/user/${user_id}`);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// get all user GITHUB Repos ===> as long as they add their username to their profile page\n\nexport const getGithubRepos = (username) => async (dispatch) => {\n  // making the request to the backend\n  try {\n    const res = await api.get(`/profile/github/${username}`);\n\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Create or update a user PROFILE\nexport const createProfile = (formData, history, edit = false) => async (\n  dispatch\n) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    // route to create and update profile api call\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(edit ? 'Profile updated' : 'Profile created', 'success'));\n    // redirect\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Create or update a user's EXPERIENCE\n\nexport const addExperience = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    // route to create and update profile api call\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Experience Added', 'success'));\n    // redirect\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Create or update a user's EDUCATION\n\nexport const addEducation = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    // route to create and update profile api call\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Education Added', 'success'));\n    // redirect\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// delete a user's EXPERIENCE\n// delete api req to /api/profile/experience/:exp_id\n\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    // adding an alert to delete the experience\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status,\n      },\n    });\n  }\n};\n\n// delete a user's EDUCATION\n// delete api req to /api/profile/education/:edu_id\n\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n    // adding an alert to delete the experience\n    dispatch(setAlert('Education Removed', 'success'));\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status,\n      },\n    });\n  }\n};\n\n// delete a user's ACCOUNT\n\nexport const deleteAccount = (id) => async (dispatch) => {\n  // VALIDATION ===> confirm that a user definitely wants to delete their account\n  if (\n    window.confirm(\n      'Are you sure you want to do that? Is so, we are sorry to see you go!'\n    )\n  ) {\n    try {\n      await axios.delete('api/profile');\n\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: ACCOUNT_DELETED });\n      // adding an alert to delete the experience\n      dispatch(setAlert('Your account has now been deleted', 'danger'));\n    } catch (error) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: error.response.statusText,\n          status: error.response.status,\n        },\n      });\n    }\n  }\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteExperience } from '../../actions/profile';\n\nconst Experience = ({ experience, deleteExperience }) => {\n  const experiences = experience.map((exp) => (\n    <tr key={exp._id}>\n      <td>{exp.company}</td>\n      <td className='hide-sm'>{exp.title}</td>\n      <td>\n        <Moment format='DD/MM/YY'>{exp.from}</Moment> -{' '}\n        {exp.to === null ? ' Current' : <Moment format='DD/MM/YY'>{exp.to}</Moment>}\n      </td>\n      <td>\n        <button\n          onClick={() => deleteExperience(exp._id)}\n          className='btn btn-danger'\n        >\n          <i className='fas fa-trash-alt'></i>\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <Fragment>\n      <h2 className='my-2'>My Experience</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th className='hide-sm'>Job Role</th>\n            <th className=''>Years</th>\n            {/* <th className='hide-sm'>Remove</th> */}\n          </tr>\n        </thead>\n        <tbody>{experiences}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired,\n  deleteExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteExperience })(Experience);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteEducation } from '../../actions/profile';\n\nconst Education = ({ education, deleteEducation }) => {\n  const educations = education.map((edu) => (\n    <tr key={edu._id}>\n      <td>{edu.school}</td>\n      <td className='hide-sm'>{edu.degree}</td>\n      <td>\n        <Moment format='DD/MM/YY'>{edu.from}</Moment> -{' '}\n        {edu.to === null ? ' Current' : <Moment format='DD/MM/YY'>{edu.to}</Moment>}\n      </td>\n      <td>\n        <button\n          onClick={() => deleteEducation(edu._id)}\n          className='btn btn-danger'\n        >\n          <i className='fas fa-trash-alt'></i>\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <Fragment>\n      <h2 className='my-2'>My Education</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>School</th>\n            <th className='hide-sm'>Accreditation</th>\n            <th className=''>Years</th>\n            {/* <th className='hide-sm'>Remove</th> */}\n          </tr>\n        </thead>\n        <tbody>{educations}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nEducation.propTypes = {\n  education: PropTypes.array.isRequired,\n  deleteEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteEducation })(Education);\n","import React, { useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { DashboardActions } from './DashboardActions';\nimport Experience from './Experience';\nimport Education from './Education';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile, loading },\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile ]);\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'>Dashboard</h1>\n      <p className='lead'>\n        <i className='fas fa-hand-sparkles'> Hello {user.name.trim().split(' ')[0]}</i>\n      </p>\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n          <Experience experience={profile.experience} />\n          <Education education={profile.education} />\n\n          <div className='my-2'>\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\n              <i className='fas fa-trash-alt'></i> Delete Account\n            </button>\n          </div>\n        </Fragment>\n      ) : (\n        <Fragment>\n          <p>\n            Hey femBOSS, we noticed you haven't created a profile yet. No\n            biggie, just head over to the link below to get started!\n            <Link to='/create-profile' className='btn btn-primary'>\n              create profile\n            </Link>\n          </p>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\n  Dashboard\n);\n","import React, { useState, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile } from '../../actions/profile';\n\nconst CreateProfile = ({ createProfile, history }) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    bio: '',\n    status: '',\n    githubusername: '',\n    skills: '',\n    instagram: '',\n    linkedin: '',\n    youtube: '',\n    twitter: '',\n    facebook: '',\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const {\n    company,\n    website,\n    location,\n    bio,\n    status,\n    githubusername,\n    skills,\n    instagram,\n    linkedin,\n    youtube,\n    twitter,\n    facebook,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large'>About Me</h1>\n      <p className='lead'>\n        <i className='fas fa-user-astronaut'></i> Help others know what you can\n        offer and how they can help.\n      </p>\n      <small>* = required field</small>\n      <form className='form-profile' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x' />\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={onChange}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x' />\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={onChange}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x' />\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={onChange}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x' />\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x' />\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={onChange}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\n","import React, { useState, Fragment, useEffect } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n// import { loadUser } from '../../actions/auth';\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    website: '',\n    location: '',\n    bio: '',\n    status: '',\n    githubusername: '',\n    skills: '',\n    instagram: '',\n    linkedin: '',\n    youtube: '',\n    twitter: '',\n    facebook: '',\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    getCurrentProfile();\n\n    // fill the form with a user's current values\n    setFormData({\n      company: loading || !profile.company ? '' : profile.company,\n      website: loading || !profile.website ? '' : profile.website,\n      location: loading || !profile.location ? '' : profile.location,\n      bio: loading || !profile.bio ? '' : profile.bio,\n      status: loading || !profile.status ? '' : profile.status,\n      githubusername:\n        loading || !profile.githubusername ? '' : profile.githubusername,\n      skills: loading || !profile.skills ? '' : profile.skills.join(','),\n      instagram: loading || !profile.socials ? '' : profile.socials.instagram,\n      linkedin: loading || !profile.socials ? '' : profile.socials.linkedin,\n      youtube: loading || !profile.socials ? '' : profile.socials.youtube,\n      twitter: loading || !profile.socials ? '' : profile.socials.twitter,\n      facebook: loading || !profile.socials ? '' : profile.socials.facebook,\n    });\n  }, [loading, getCurrentProfile]);\n\n  const {\n    company,\n    website,\n    location,\n    bio,\n    status,\n    githubusername,\n    skills,\n    instagram,\n    linkedin,\n    youtube,\n    twitter,\n    facebook,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large'>About Me</h1>\n      <p className='lead-profile'>\n        <i className='fas fa-hat-wizard'></i> Help others get to know you, what\n        you can offer and how they can help.\n      </p>\n      <small>* = required field</small>\n      <form className='form-profile' onSubmit={(e) => onSubmit(e)}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={(e) => onChange(e)}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Web Designer'>Web Designer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager / Boss Babe</option>\n            <option value='Student or Learning'>Student / Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Volunteer'>Volunteer</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your own biz or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Portfolio site'\n            name='website'\n            value={website}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Could be your portfolio site or a your biz website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>City & state (eg. Adelaide, SA)</small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={(e) => onChange(e)}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n          <small className='form-text'>\n            Tell us a little about yourself coder girl!\n          </small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Socials\n          </button>\n          <span>Optional but recommended</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x' />\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={onChange}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x' />\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={onChange}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x' />\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={onChange}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x' />\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x' />\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={onChange}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history }) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    currrent: false,\n    description: '',\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const { company, title, location, from, to, current, description } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <Fragment>\n      <h1 class='large text-primary'>My Journey</h1>\n      <p class='lead-profile'>\n        <i class='fas fa-laptop-code'></i> Tell others where you've been and\n        what you've done.\n      </p>\n      <small>* = required field</small>\n      <form\n        class='form-profile'\n        onSubmit={(e) => {\n          e.preventDefault();\n          addExperience(formData, history);\n        }}\n      >\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* Job Title'\n            name='title'\n            value={title}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* Company'\n            name='company'\n            value={company}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <h4>Start Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={(e) => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n            />{' '}\n            I am currently working in this role\n          </p>\n        </div>\n        <div class='form-group'>\n          <h4>End Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={(e) => onChange(e)}\n            disabled={toDateDisabled ? 'disabled' : ''}\n          />\n        </div>\n        <div class='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder=\"Here's what I did that was awesome...\"\n            value={description}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n        </div>\n        <input type='submit' class='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addExperience })(withRouter(AddExperience));\n","import React, { Fragment, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addEducation } from '../../actions/profile';\n\nconst AddEducation = ({ addEducation, history }) => {\n  const [formData, setFormData] = useState({\n    school: '',\n    degree: '',\n    fieldofstudy: '',\n    from: '',\n    to: '',\n    currrent: false,\n    description: '',\n  });\n\n  const [toDateDisabled, toggleDisabled] = useState(false);\n\n  const {\n    school,\n    degree,\n    fieldofstudy,\n    from,\n    to,\n    current,\n    description,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <Fragment>\n      <h1 class='large text-primary'>My Journey</h1>\n      <p class='lead-profile'>\n        <i class='fas fa-user-graduate'></i> Tell others where you've been and\n        what you've done.\n      </p>\n      <small>* = required field</small>\n      <form\n        class='form-profile'\n        onSubmit={(e) => {\n          e.preventDefault();\n          addEducation(formData, history);\n        }}\n      >\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* School or Bootcamp'\n            name='school'\n            value={school}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='* Degree or Certificate'\n            name='degree'\n            value={degree}\n            onChange={(e) => onChange(e)}\n            required\n          />\n        </div>\n        <div class='form-group'>\n          <input\n            type='text'\n            placeholder='Field of Study'\n            name='fieldofstudy'\n            value={fieldofstudy}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <h4>Start Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={(e) => onChange(e)}\n          />\n        </div>\n        <div class='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={(e) => {\n                setFormData({ ...formData, current: !current });\n                toggleDisabled(!toDateDisabled);\n              }}\n            />{' '}\n            Currently Enrolled\n          </p>\n        </div>\n        <div class='form-group'>\n          <h4>End Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={(e) => onChange(e)}\n            disabled={toDateDisabled ? 'disabled' : ''}\n          />\n        </div>\n        <div class='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder=\"Here's what I learned that was awesome...\"\n            value={description}\n            onChange={(e) => onChange(e)}\n          ></textarea>\n        </div>\n        <input type='submit' class='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addEducation })(withRouter(AddEducation));\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ProfileItem = ({\n  profile: {\n    user: { _id, name, avatar },\n    status,\n    company,\n    location,\n    skills,\n  },\n}) => {\n  return (\n    <div className='profile bg-light'>\n      <img className='round-img' src={avatar} alt='' />\n      <div>\n        <h2>{name}</h2>\n        <p>\n          {status} {company && <span> at {company}</span>}\n        </p>\n        <p className='my-1'>{location && <span>{location}</span>}</p>\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\n          View Profile\n        </Link>\n      </div>\n      <ul>\n        {skills.slice(0, 4).map((skill, index) => (\n          <li key={index} className='text-primary'>\n            <i className='fas fa-terminal'></i> {skill} \n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileItem;\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './ProfileItem';\nimport { getProfiles } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <h1 className='large text-primary'>Members</h1>\n          <p className='lead-profile'>\n          <i className='fas fa-code-branch'></i> Join forces, collaborate,\n            launch projects!\n          </p>\n          {/* <div className='form-profile'>\n          <div className='form-group'>\n          <select name='status' value>\n            <option value='0'>Search by technology</option>\n            <option value='Html/CSS'>HTML/CSS</option>\n            <option value='JavaScript'>JavaScript</option>\n            <option value='ReactJS'>ReactJS</option>\n            <option value='Vue.js'>Vue.js</option>\n            <option value='Bootstrap 5'>Bootstrap 5</option>\n            <option value='Node js'>Node js</option>\n            <option value='PWA'>PWA</option>\n            <option value='Adobe CC'>Adobe CC</option>\n          </select>\n        </div>\n        </div> */}\n          {/* <div class='form-profile'>\n          <input\n            type='text'\n            placeholder='Search members'\n            name=''\n            value=''\n          />\n        </div> */}\n\n          {<div className=\"profiles\">\n            {profiles.length > 0 ? ( profiles.map(profile => (\n              profile.user && \n              <ProfileItem key={profile._id} profile={profile}  />\n            ))) : <h4>No profiles found</h4>}\n          </div>}\n        </Fragment>\n      )}\n      {/* <Fragment>profile</Fragment> */}\n      <Link to=\"/\" className=\"btn btn-primary\">\n        Back to dashboard\n      </Link>\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst ProfileTop = ({\n  profile: {\n    status,\n    company,\n    location,\n    website,\n    socials,\n    user: { name, avatar },\n  },\n}) => {\n  return (\n    <div className='profile-top p-2'>\n      <img className='round-img my-1' src={avatar} alt='' />\n      <h1 className='large'>{name}</h1>\n      <p className='lead-profile-top'>\n        {status}, {company && <span> at {company}</span>}\n      </p>\n      <p>{location && <span>{location}</span>}</p>\n      <div className='icons my-1'>\n        {website && (\n          <a href={website} target='_blank' rel='noopener noreferrer'>\n            <i className='fas fa-globe fa-2x'></i>\n          </a>\n        )}\n        {socials && socials.twitter && (\n          <a href={socials.twitter} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-twitter fa-2x'></i>\n          </a>\n        )}\n\n        {socials && socials.facebook && (\n          <a href={socials.facebook} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-facebook fa-2x'></i>\n          </a>\n        )}\n        {socials && socials.linkedin && (\n          <a href={socials.linkedin} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-linkedin fa-2x'></i>\n          </a>\n        )}\n        {socials && socials.youtube && (\n          <a href={socials.youtube} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-youtube fa-2x'></i>\n          </a>\n        )}\n        {socials && socials.instagram && (\n          <a href={socials.instagram} target='_blank' rel='noopener noreferrer'>\n            <i className='fab fa-instagram fa-2x'></i>\n          </a>\n        )}\n      </div>\n      <div>\n        <Link to='/' className='btn my-1 btn-connect'>\n          <i className='fas fa-award'></i> Admire\n        </Link>\n        <Link to='/' className='btn my-1 btn-connect'>\n          <i className='fas fa-hand-sparkles'></i> Connect\n        </Link>\n      </div>\n      <div>\n        <Link to='/' className='btn my-1 btn-connect'>\n          <i className='fas fa-copy'></i> Copy URL\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired,\n  experience: PropTypes.object.isRequired,\n};\n\nexport default ProfileTop;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name },\n  },\n}) => {\n  return (\n    <div class='profile-about bg-light p-2'>\n      {/* show only if the user has included a bio within their profile page */}\n      {bio && (\n        <Fragment>\n          <h2 class='text-primary'>About {name.trim().split(' ')[0]}</h2>\n          <p>{bio}</p>\n          <div class='line'></div>\n        </Fragment>\n      )}\n\n      <h2 class='text-primary'>Good at</h2>\n      <div class='skills'>\n        {skills.map((skills, index) => (\n          <div key={index} className='p-1'>\n            <i className='fas fa-terminal'></i> {skills}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileAbout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nconst ProfileExperience = ({\n  experience: { company, title, location, current, to, from, description },\n}) => (\n  <div>\n    <h3>{company}</h3>\n    <p>\n      <Moment format='DD/MM/YY'>{moment.utc(from)}</Moment> -{' '}\n      {!to ? ' Current' : <Moment format='DD/MM/YY'>{moment.utc(to)}</Moment>}\n    </p>\n    <p>\n      <strong>Position: </strong> {title}\n    </p>\n    <strong>Description: </strong> {description}\n  </div>\n);\n\nProfileExperience.propTypes = {\n  experience: PropTypes.object.isRequired,\n};\n\nexport default ProfileExperience;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n\nconst ProfileEducation = ({\n  education: { school, degree, fieldofstudy, current, to, from, description },\n}) => (\n  <div>\n    <h3>{school}</h3>\n    <p>\n      <Moment format='DD/MM/YY'>{moment.utc(from)}</Moment> -{' '}\n      {!to ? ' Current' : <Moment format='DD/MM/YY'>{moment.utc(to)}</Moment>}\n    </p>\n    <p>\n      <strong>Accreditation: </strong> {degree}\n    </p>\n    <p>\n      <strong>Field of Study: </strong> {fieldofstudy}\n    </p>\n    <strong>Description: </strong> {description}\n  </div>\n);\n\nProfileEducation.propTypes = {\n  education: PropTypes.object.isRequired,\n};\n\nexport default ProfileEducation;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n  return (\n    <div className='profile-github'>\n      <h2 className='text-primary my-1'>GitHub Repos</h2>\n      {repos === null ? (\n        <Spinner />\n      ) : (\n        repos.map((repo) => (\n          <div key={repo._id} className='repo bg-white p-1 my-1'>\n            <div>\n              <h4>\n                <a\n                  href={repo.html_url}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  {' '}\n                  {repo.name}\n                </a>\n              </h4>\n              <p>{repo.description}</p>\n            </div>\n            <div>\n              <ul>\n                <li className='badge badge-light'>\n                  <i className='fas fa-star'></i> Stars: {repo.stargazers_count}\n                </li>\n                <li className='badge badge-highlight'>\n                  <i className='fas fa-eye'></i> Watchers: {repo.watchers_count}\n                </li>\n                <li className='badge badge-danger'>\n                  <i className='fas fa-code-branch'></i> Forks:{' '}\n                  {repo.forks_count}\n                </li>\n              </ul>\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  repos: state.profile.repos,\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { getProfileById } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match,\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n  return (\n    <Fragment>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <div className='profile-grid my-1'>\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div class='profile-exp bg-white p-2'>\n              <h2 class='text-primary'>Experience</h2>\n              {profile.experience.length > 0 ? (\n                <Fragment>\n                  {profile.experience.map((experience) => (\n                    <ProfileExperience\n                      key={experience._id}\n                      experience={experience}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No experiences added</h4>\n              )}\n            </div>\n            <div class='profile-edu bg-white p-2'>\n              <h2 class='text-primary'>Education</h2>\n              {profile.education.length > 0 ? (\n                <Fragment>\n                  {profile.education.map((education) => (\n                    <ProfileEducation\n                      key={education._id}\n                      education={education}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No Education listed</h4>\n              )}\n            </div>\n            {profile.githubusername && (\n              <ProfileGithub username={profile.githubusername} />\n            )}\n          </div>\n          <Link to='/profiles' className='btn btn-primary'>\n            Back to Members\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to='/edit-profile' className='btn btn-primary'>\n                Edit profile\n              </Link>\n            )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions,\n}) => (\n  <div class='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img class='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p class='my-1'>{text}</p>\n      <p class='post-date'>\n        Posted on <Moment format='DD/MM/YYYY'>{date}</Moment>\n      </p>\n\n      {showActions && (\n        <Fragment>\n          <button\n            onClick={(e) => addLike(_id)}\n            type='button'\n            class='btn btn-light'\n          >\n            <i class='fas fa-thumbs-up'></i>{' '}\n            <span>\n              {' '}\n              {likes.length > 0 && (\n                <span class='comment-count'>{likes.length}</span>\n              )}\n            </span>\n          </button>\n          <button\n            onClick={(e) => removeLike(_id)}\n            type='button'\n            class='btn btn-light'\n          >\n            <i class='fas fa-thumbs-down'></i>{' '}\n          </button>\n          <Link to={`/posts/${_id}`} class='btn btn-primary'>\n            Thread{' '}\n            {comments.length > 0 && (\n              <span class='comment-count'>{comments.length}</span>\n            )}\n          </Link>\n          {!auth.loading && user === auth.user._id && (\n            <button\n              onClick={(e) => deletePost(_id)}\n              type='button'\n              class='btn btn-danger'\n            >\n              <i class='fas fa-eraser'></i>{' '}\n            </button>\n          )}\n        </Fragment>\n      )}\n    </div>\n  </div>\n);\n\nPostItem.defaultProps = {\n  showActions: true,\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);\n","import axios from 'axios';\n// import api from '../utils/api';\nimport { setAlert } from './alert';\nimport {\n  GET_POSTS,\n  GET_POST,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  ADD_COMMENT,\n  DELETE_COMMENT,\n} from './types';\n\n// GET posts\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/api/posts');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// ADD likes to a user posts\n\nexport const addLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// REMOVE likes to a user posts\n\nexport const removeLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// DELETE post\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n    dispatch(setAlert('Post Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// CREATE post\n\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.post('/api/posts/', formData, config);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// GET single user post\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// ADD comments to post\n\nexport const addComment = (postId, formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// DELETE comments from post\n\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: DELETE_COMMENT,\n      payload: commentId,\n    });\n    dispatch(setAlert('Comment Deleted', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: {\n        msg: err.response ? err.response.statusText : err.message,\n        status: err.status,\n      },\n    });\n  }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\n\nconst PostForm = ({ addPost }) => {\n  const [text, setText] = useState('');\n\n  return (\n    <div className='post-form'>\n      <div className='badge-highlight p'>\n        <h3>What's on your mind...</h3>\n      </div>\n      <form\n        className='form my-1'\n        onSubmit={(e) => {\n          e.preventDefault();\n          addPost({ text });\n          setText('');\n        }}\n      >\n        <textarea\n          className='textarea-posts'\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Create a post'\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          required\n        ></textarea>\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addPost })(PostForm);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../../actions/post';\nimport Spinner from '../layout/Spinner';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 className='large text-primary'>Forum</h1>\n      <p className='lead-profile'>\n        <i className='fas fa-comments'></i> Ask questions, exchange ideas,\n        connect others!\n      </p>\n      <PostForm />\n      <div className='posts'>\n        {posts.map((post) => (\n          <PostItem key={post._id} post={post} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\n// mapStateToProps to get the post state\nexport default connect(mapStateToProps, { getPosts })(Posts);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addComment } from '../../actions/post';\n\nconst CommentForm = ({ postId, addComment }) => {\n  const [text, setText] = useState('');\n  return (\n    <div className='post-form'>\n      <div className='badge-highlight p'>\n        <h3>Join the conversation...</h3>\n      </div>\n      <form\n        className='form my-1'\n        onSubmit={(e) => {\n          e.preventDefault();\n          addComment(postId, { text });\n          setText('');\n        }}\n      >\n        <textarea\n        className='textarea-posts'\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Post a comment'\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          required\n        ></textarea>\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addComment })(CommentForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { deleteComment } from '../../actions/post';\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment,\n}) => (\n  <div class='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img class='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p class='my-1'>{text}</p>\n      <p class='post-date'>\n        Posted on <Moment format='DD/MM/YY'>{date}</Moment>\n      </p>\n      {!auth.loading && user === auth.user._id && (\n        <button\n          onClick={(e) => deleteComment(postId, _id)}\n          type='button'\n          className='btn btn-danger'\n        >\n          <i className='fas fa-eraser'></i>\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport { getPost } from '../../actions/post';\nimport { Link } from 'react-router-dom';\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost, match.params.id]);\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <Link to='/posts' className='btn btn-primary'>\n        back to Forum\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className='comments'>\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n\n// post comment thread ==> loop through the comments (array in the Post collection)\n// then finally output component of CommentItem\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(props) =>\n      !isAuthenticated && !loading ? (\n        <Redirect to='/login' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport VirtualCoworking from './components/layout/VirtualCoworking';\nimport Resources from './components/layout/Resources';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport Alert from './components/layout/Alert';\nimport Dashboard from './components/dashboard/Dashboard';\nimport CreateProfile from './components/profile-forms/CreateProfile';\nimport EditProfile from './components/profile-forms/EditProfile';\nimport AddExperience from './components/profile-forms/AddExperience';\nimport AddEducation from './components/profile-forms/AddEducation';\nimport Profiles from './components/profiles/Profiles';\nimport Profile from './components/profile/Profile';\nimport Posts from './components/posts/Posts';\nimport Post from './components/post/Post';\nimport PrivateRoute from './components/routing/PrivateRoute';\n// Adding Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\n\n// import { setAlert } from './actions/alert';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []); //[] = so it only runs/mounts once => replaces the componentDidMount() as I'm using functions instead\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route exact path='/' component={Landing} />\n          <section className='container'>\n            <Alert />\n            <Switch>\n              <Route exact path='/join' component={Register} />\n              <Route exact path='/login' component={Login} />\n              <PrivateRoute exact path='/profiles' component={Profiles} />\n              <PrivateRoute exact path='/profile/:id' component={Profile} />\n              <PrivateRoute exact path='/dashboard' component={Dashboard} />\n              <PrivateRoute exact path='/virtual-coworking' component={VirtualCoworking} />\n              <PrivateRoute exact path='/resources' component={Resources} />\n              <PrivateRoute\n                exact\n                path='/create-profile'\n                component={CreateProfile}\n              />\n              <PrivateRoute\n                exact\n                path='/edit-profile'\n                component={EditProfile}\n              />\n              <PrivateRoute\n                exact\n                path='/add-experience'\n                component={AddExperience}\n              />\n              <PrivateRoute\n                exact\n                path='/add-education'\n                component={AddEducation}\n              />\n              <PrivateRoute exact path='/posts' component={Posts} />\n              <PrivateRoute exact path='/posts/:id' component={Post} />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n\n <App />,\ndocument.getElementById('root'));\n"],"sourceRoot":""}